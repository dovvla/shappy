#!/bin/sh

help() {
  echo "Usage: $0 <snapshot|cleanup>"
}


check_value() {
  echo ${1} | egrep '^[0-9]+$' &>/dev/null
  echo $?
}


snapshot() {
  echo 'Daily snapshot:'
  rc=0
  DATE=$(date -I)
  DATASETS=$(zfs list -H -o name)

  for DATASET in $DATASETS; do
    ON=$(zfs get -H  -o value snapshot:on $DATASET)
    if [ "${ON}" != "yes" ]; then
      continue
    fi
    KEEP_NUMBER_DAILY=$(zfs get -H  -o value snapshot:daily $DATASET | sed 's/^-$//')
    KEEP_NUMBER_WEEKLY=$(zfs get -H  -o value snapshot:weekly $DATASET | sed 's/^-$//')
    KEEP_NUMBER_MONTHLY=$(zfs get -H  -o value snapshot:monthly $DATASET | sed 's/^-$//')
    KEEP_NUMBER_YEARLY=$(zfs get -H  -o value snapshot:yearly $DATASET | sed 's/^-$//')
    if [ -z "${KEEP_NUMBER_DAILY}${KEEP_NUMBER_WEEKLY}${KEEP_NUMBER_MONTHLY}${KEEP_NUMBER_YEARLY}" ]; then
        continue
    fi

    echo "------------------------"
    date

    echo "Creating snapshot ${DATASET}@${DATE}"
    zfs snapshot ${DATASET}@${DATE}

    echo "------------------------"

    rcnow=$?
    if [ "${rcnow}" != "0" ]; then
      rc="${rcnow}"
    fi
  done
  return $rc
}

cleanup() {
  echo 'ZFS snapshot cleanup:'
  rc=0
  DATE=$(date -I)
  DATASETS=$(zfs list -H -o name)

  for DATASET in $DATASETS; do
    ON=$(zfs get -H  -o value snapshot:on $DATASET)
    if [ "${ON}" != "yes" ]; then
      continue
    fi
    KEEP_NUMBER_DAILY=$(zfs get -H -o value snapshot:daily $DATASET | sed 's/^-$/0/')
    KEEP_NUMBER_WEEKLY=$(zfs get -H -o value snapshot:weekly $DATASET | sed 's/^-$/0/')
    KEEP_NUMBER_MONTHLY=$(zfs get -H -o value snapshot:monthly $DATASET | sed 's/^-$/0/')
    KEEP_NUMBER_YEARLY=$(zfs get -H -o value snapshot:yearly $DATASET | sed 's/^-$/0/')
    EXISTING_SNAPSHOTS=$(zfs list -H -o name -t snapshot $DATASET)
    KEEP_SNAPSHOTS=""

    echo ${KEEP_NUMBER_DAILY} | egrep '^[0-9]+$' >/dev/null 2>&1
    if [ "$?" != "0" ]; then
      echo "Value ${KEEP_NUMBER_DAILY} for snapshot:daily on ${DATASET} is invalid" >&2
      exit 1
    fi

    echo ${KEEP_NUMBER_WEEKLY} | egrep '^[0-9]+$' >/dev/null 2>&1
    if [ "$?" != "0" ]; then
      echo "Value ${KEEP_NUMBER_WEEKLY} for snapshot:weekly on ${DATASET} is invalid" >&2
      exit 1
    fi

    echo ${KEEP_NUMBER_MONTHLY} | egrep '^[0-9]+$' >/dev/null 2>&1
    if [ "$?" != "0" ]; then
      echo "Value ${KEEP_NUMBER_MONTHLY} for snapshot:monthly on ${DATASET} is invalid" >&2
      exit 1
    fi

    echo ${KEEP_NUMBER_YEARLY} | egrep '^[0-9]+$' >/dev/null 2>&1
    if [ "$?" != "0" ]; then
      echo "Value ${KEEP_NUMBER_YEARLY} for snapshot:yearly on ${DATASET} is invalid" >&2
      exit 1
    fi

    echo "------------------------"

    index=0
    while [ "${index}" != "${KEEP_NUMBER_DAILY}" ]; do
      CHECK_DATE=$(date -v-${index}d -I)
      if [ -z "${KEEP_SNAPSHOTS}" ]; then
        KEEP_SNAPSHOTS="${DATASET}@${CHECK_DATE}"
      else
        KEEP_SNAPSHOTS="${KEEP_SNAPSHOTS} ${DATASET}@${CHECK_DATE}"
      fi
      let index=$index+1 >/dev/null
    done

    index=0
    while [ "${index}" != "${KEEP_NUMBER_WEEKLY}" ]; do
      CHECK_DATE=$(date -v-${index}w -I)
      if [ -z "${KEEP_SNAPSHOTS}" ]; then
        KEEP_SNAPSHOTS="${DATASET}@${CHECK_DATE}"
      else
        KEEP_SNAPSHOTS="${KEEP_SNAPSHOTS} ${DATASET}@${CHECK_DATE}"
      fi
      let index=$index+1 >/dev/null
    done

    index=0
    while [ "${index}" != "${KEEP_NUMBER_MONTHLY}" ]; do
      CHECK_DATE=$(date -v-${index}m -I)
      if [ -z "${KEEP_SNAPSHOTS}" ]; then
        KEEP_SNAPSHOTS="${DATASET}@${CHECK_DATE}"
      else
        KEEP_SNAPSHOTS="${KEEP_SNAPSHOTS} ${DATASET}@${CHECK_DATE}"
      fi
      let index=$index+1 >/dev/null
    done

    index=0
    while [ "${index}" != "${KEEP_NUMBER_YEARLY}" ]; do
      CHECK_DATE=$(date -v-${index}y -I)
      if [ -z "${KEEP_SNAPSHOTS}" ]; then
        KEEP_SNAPSHOTS="${DATASET}@${CHECK_DATE}"
      else
        KEEP_SNAPSHOTS="${KEEP_SNAPSHOTS} ${DATASET}@${CHECK_DATE}"
      fi
      let index=$index+1 >/dev/null
    done

    echo "Dataset: $DATASET"

    for snapshot in ${EXISTING_SNAPSHOTS}; do
      echo "${KEEP_SNAPSHOTS}" | grep -o "${snapshot}" >/dev/null 2>&1
      if [ "$?" != "0" ]; then
        echo "Remove ${snapshot}"
        zfs destroy ${snapshot}
      fi
    done
  done
  echo "------------------------"
  return $rc
}


case $1 in
  snapshot|cleanup|help)
    date
    $@
    ;;
  *)
    echo "Error!"
    exit 1
    ;;
esac
